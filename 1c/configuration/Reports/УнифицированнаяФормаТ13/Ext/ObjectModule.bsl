
&После("ЗаполнитьДанныеПоСотруднику")
Процедура ЛК_ЗаполнитьДанныеПоСотруднику(ДокументРезультат, ОбластьДанныеОВремени, ДанныеПоСотруднику)
	
	//+++
	Если ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Свойство("ДанныеОтчета") = Ложь Тогда		
		Возврат;		
	КонецЕсли;
	
	МассивДанных = Новый Массив;
	ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Свойство("ДанныеОтчета", МассивДанных);      
	ДокументРезультат = Новый ТабличныйДокумент;
	//---
	
	ИмяПоляБуквенныйКод = ИмяПоляБуквенныйКод();

	НастройкиПечатныхФорм = ЗарплатаКадры.НастройкиПечатныхФорм();
	КоличествоПараметров = ОбластьДанныеОВремени.Параметры.Количество();

	Для ИндексПараметра = 0 По КоличествоПараметров - 1 Цикл  
		ОбластьДанныеОВремени.Параметры.Установить(ИндексПараметра, Неопределено);
	КонецЦикла;	

	ВидВремениВыходной = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ВыходныеДни");
	ВидВремениКомандировка = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Командировка");
	ВидВремениОплачиваемыеНерабочиеДни =
	ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОплачиваемыеНерабочиеДни");

	ОтработаноДнейЗаПервуюПоловинуМесяца = 0;
	ОтработаноЧасовЗаВторуюПоловинуМесяца = 0;
	ОтработаноДнейЗаВторуюПоловинуМесяца = 0;
	ОтработаноЧасовЗаПервуюПоловинуМесяца = 0;
	ОтработаноДнейЗаМесяц = 0;
	ОтработаноЧасовЗаМесяц = 0;

	Если НастройкиПечатныхФорм.ВыводитьПолныеФИОВСписочныхПечатныхФормах Тогда
		ФИО = ДанныеПоСотруднику.ФИОПолные;
	Иначе
		ФИО = ДанныеПоСотруднику.ФамилияИО;
	КонецЕсли;

	ОбластьДанныеОВремениПараметры = Новый Структура("Сотрудник,ТабельныйНомер,НомерПП,ДниПерваяПоловина,ЧасыПерваяПоловина,ДниВтораяПоловина,ЧасыВтораяПоловина,ДниЗаМесяц,ЧасыЗаМесяц");

	ОбластьДанныеОВремениПараметры.Сотрудник = ФИО + "
	|(" + ДанныеПоСотруднику.ДолжностьНаименование + ")";
	ОбластьДанныеОВремениПараметры.ТабельныйНомер = ДанныеПоСотруднику.СотрудникКод;	
	ОбластьДанныеОВремениПараметры.НомерПП = ДанныеПоСотруднику.СистемныеПоляНомерПоПорядкуВГруппировке;	

	ОтклоненияПоСотруднику = Новый ТаблицаЗначений;
	ОтклоненияПоСотруднику.Колонки.Добавить("ВидВремени");
	ОтклоненияПоСотруднику.Колонки.Добавить("БуквенныйКод");
	ОтклоненияПоСотруднику.Колонки.Добавить("Часов");
	ОтклоненияПоСотруднику.Колонки.Добавить("Дней");
	
	//+++
	СтруктураМесяца = Новый Структура;
	СтруктураМесяца.Вставить("Сотрудник", ДанныеПоСотруднику.Сотрудник); 
	СтруктураМесяца.Вставить("ТабНом", ДанныеПоСотруднику.СотрудникКод); 
	//---

	Для Каждого ДанныеОВремениНаДату Из ДанныеПоСотруднику.Строки Цикл 
		
		ЭтоВыходнойДень = ДанныеОВремениНаДату.ЭтоВыходнойДень;

		Если День(ДанныеОВремениНаДату.Дата) <= 15 Тогда
			ОтработаноДнейЗаПервуюПоловинуМесяца = ОтработаноДнейЗаПервуюПоловинуМесяца + ДанныеОВремениНаДату.РабочиеДни;
			ОтработаноЧасовЗаПервуюПоловинуМесяца = ОтработаноЧасовЗаПервуюПоловинуМесяца + ДанныеОВремениНаДату.РабочиеЧасы;
		Иначе
			ОтработаноЧасовЗаВторуюПоловинуМесяца = ОтработаноЧасовЗаВторуюПоловинуМесяца + ДанныеОВремениНаДату.РабочиеЧасы;
			ОтработаноДнейЗаВторуюПоловинуМесяца = ОтработаноДнейЗаВторуюПоловинуМесяца + ДанныеОВремениНаДату.РабочиеДни;
		КонецЕсли;

		ОтработаноДнейЗаМесяц = ОтработаноДнейЗаМесяц + ДанныеОВремениНаДату.РабочиеДни;
		ОтработаноЧасовЗаМесяц = ОтработаноЧасовЗаМесяц + ДанныеОВремениНаДату.РабочиеЧасы;

		ПредставлениеВидовВремени = "";
		ЧасыПоВидамВремениСтрока = "";

		КоличествоЗаписейНаДату = 0;
		ЭтоОтклонение = Ложь;
		Для Каждого ДетальныеЗаписиЗаДень Из ДанныеОВремениНаДату.Строки Цикл
			Если Не ДетальныеЗаписиЗаДень.ВидУчетаВремениРабочееВремя 
				И ДетальныеЗаписиЗаДень.ВидУчетаВремени <> ВидВремениВыходной
				И ДетальныеЗаписиЗаДень.ВидУчетаВремени <> ВидВремениОплачиваемыеНерабочиеДни
				И ДетальныеЗаписиЗаДень.ВидУчетаВремениОсновноеВремя <> Справочники.ВидыИспользованияРабочегоВремени.ПустаяСсылка() Тогда

				ОтклоненияПоВидуВремени = ОтклоненияПоСотруднику.Добавить();
				ОтклоненияПоВидуВремени.ВидВремени = ДетальныеЗаписиЗаДень.ВидУчетаВремени;
				ОтклоненияПоВидуВремени.БуквенныйКод = ДетальныеЗаписиЗаДень[ИмяПоляБуквенныйКод];
				ОтклоненияПоВидуВремени.Дней = 1;
				Если ДанныеОВремениНаДату.Строки.Количество() > 1 Тогда
					ОтклоненияПоВидуВремени.Часов = ДетальныеЗаписиЗаДень.Часы;		
				Иначе 	
					ОтклоненияПоВидуВремени.Часов = ДанныеОВремениНаДату.Часы;
				КонецЕсли;
				ЭтоОтклонение = Истина;
			КонецЕсли; 

			Если ДетальныеЗаписиЗаДень.ОсновноеВремя <> ВидВремениВыходной
				Или ЭтоВыходнойДень Тогда

				ПредставлениеВидовВремени = ПредставлениеВидовВремени + "/"+  ДетальныеЗаписиЗаДень[ИмяПоляБуквенныйКод];
				Если Не ДетальныеЗаписиЗаДень.ВидУчетаВремениЦелосменное Тогда 
					ЧасыПоВидамВремениСтрока = ЧасыПоВидамВремениСтрока +  "/" + Формат(ДетальныеЗаписиЗаДень.Часы, "ЧГ=");
				КонецЕсли;		
			КонецЕсли;	

			КоличествоЗаписейНаДату = КоличествоЗаписейНаДату + 1;
		КонецЦикла;	

		Если КоличествоЗаписейНаДату = 1
			И ЭтоОтклонение Тогда

			ЧасыПоВидамВремениСтрока = "";
		КонецЕсли;	

		НомерДня = День(ДетальныеЗаписиЗаДень.Дата);

		ОбластьДанныеОВремениПараметры.Вставить("Символ" + НомерДня, Сред(ПредставлениеВидовВремени, 2));
		ОбластьДанныеОВремениПараметры.Вставить("ДополнительноеЗначение" + НомерДня, Сред(ЧасыПоВидамВремениСтрока, 2));
		
		//+++
		СтруктураМесяца.Вставить("Символ" + НомерДня, Сред(ПредставлениеВидовВремени, 2));
		СтруктураМесяца.Вставить("ДополнительноеЗначение" + НомерДня, Сред(ЧасыПоВидамВремениСтрока, 2));
		СтруктураМесяца.Вставить("ДниПерваяПоловина", ОтработаноДнейЗаПервуюПоловинуМесяца);
		СтруктураМесяца.Вставить("ЧасыПерваяПоловина", ОтработаноЧасовЗаПервуюПоловинуМесяца);
		СтруктураМесяца.Вставить("ДниВтораяПоловина", ОтработаноДнейЗаВторуюПоловинуМесяца);
		СтруктураМесяца.Вставить("ЧасыВтораяПоловина", ОтработаноЧасовЗаВторуюПоловинуМесяца);
		СтруктураМесяца.Вставить("ДниЗаМесяц", ОтработаноДнейЗаМесяц);
		СтруктураМесяца.Вставить("ЧасыЗаМесяц", ОтработаноЧасовЗаМесяц);
		СтруктураМесяца.Вставить("ОтклоненияПоСотруднику", Новый Массив);
		//---

		ОбластьДанныеОВремениПараметры.ДниПерваяПоловина = ОтработаноДнейЗаПервуюПоловинуМесяца;
		ОбластьДанныеОВремениПараметры.ЧасыПерваяПоловина = ОтработаноЧасовЗаПервуюПоловинуМесяца;
		ОбластьДанныеОВремениПараметры.ДниВтораяПоловина = ОтработаноДнейЗаВторуюПоловинуМесяца;
		ОбластьДанныеОВремениПараметры.ЧасыВтораяПоловина = ОтработаноЧасовЗаВторуюПоловинуМесяца;
		ОбластьДанныеОВремениПараметры.ДниЗаМесяц = ОтработаноДнейЗаМесяц;
		ОбластьДанныеОВремениПараметры.ЧасыЗаМесяц = ОтработаноЧасовЗаМесяц;

		ОтклоненияПоСотруднику.Свернуть("ВидВремени, БуквенныйКод", "Дней, Часов");

		СчетчикОтклонений = 1;
		Для Каждого ОтклонениеПоВидуВремени Из ОтклоненияПоСотруднику Цикл
			
			//+++
			СтруктураМесяца.ОтклоненияПоСотруднику.Добавить(
				Новый Структура("Номер, НеявкаКод, НеявкаДниЧасы", 
				СчетчикОтклонений, 
				ОтклонениеПоВидуВремени.БуквенныйКод, 
				Формат(ОтклонениеПоВидуВремени.Дней, "ЧГ=") + ?(ОтклонениеПоВидуВремени.Часов > 0, "(" + Формат(ОтклонениеПоВидуВремени.Часов, "ЧГ=") + ")", "")));
			//---


			ОбластьДанныеОВремениПараметры.Вставить("НеявкаКод" + СчетчикОтклонений, ОтклонениеПоВидуВремени.БуквенныйКод);
			ОбластьДанныеОВремениПараметры.Вставить("НеявкаДниЧасы" + СчетчикОтклонений, Формат(ОтклонениеПоВидуВремени.Дней, "ЧГ=") + 
			?(ОтклонениеПоВидуВремени.Часов > 0, "(" + Формат(ОтклонениеПоВидуВремени.Часов, "ЧГ=") + ")", ""));

			СчетчикОтклонений = СчетчикОтклонений + 1;
			
		КонецЦикла;
	КонецЦикла;
	
	//+++
	МассивДанных.Добавить(СтруктураМесяца);
	//---

	ОбластьДанныеОВремени.Параметры.Заполнить(ОбластьДанныеОВремениПараметры);

КонецПроцедуры