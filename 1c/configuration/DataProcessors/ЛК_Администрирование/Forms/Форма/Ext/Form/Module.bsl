#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Логин = "user@mail.ru";
	Объект.Пароль = "111111"; 
	
	СоздатьПользователя				 = Истина;
	СоздатьСотрудниковПоПользователю = Истина;
	СоздатьФото 					 = Истина;
	СоздатьВидыЗанятости 			 = Истина;
	СоздатьИсториюИзмененияГрафиков  = Истина;
	СоздатьКадровуюИсторию 			 = Истина;
	СоздатьРасчетныеЛистки 			 = Истина;
	                      
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы 

&НаКлиенте
Процедура СоздатьПользователяПриИзменении(Элемент)
	
	Элементы.Логин.Доступность  = СоздатьПользователя;
	Элементы.Пароль.Доступность = СоздатьПользователя;

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмяТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	СоздатьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ВыполнитьОбменНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура СоздатьНаСервере() 
	
	Если СоздатьПользователя Тогда
		СоздатьПользователяНаСервере();
	КонецЕсли;	
	
	Если СоздатьСотрудниковПоПользователю Тогда
		СоздатьСотрудниковПоПользователюНаСервере();
	КонецЕсли;
	
	Если СоздатьФото Тогда
		СоздатьФотоНаСервере();
	КонецЕсли;	
	
	Если СоздатьВидыЗанятости Тогда
		СоздатьВидыЗанятостиНаСервере();
	КонецЕсли;
	
	Если СоздатьИсториюИзмененияГрафиков Тогда
		СоздатьИсториюИзмененияГрафиковНаСервере();
	КонецЕсли;
	
	Если СоздатьКадровуюИсторию Тогда
		СоздатьКадровуюИсториюНаСервере();
	КонецЕсли;
	
	Если СоздатьРасчетныеЛистки Тогда
		СоздатьРасчетныеЛисткиНаСервере();
	КонецЕсли;	
КонецПроцедуры	

Процедура ВыполнитьОбменНаСервере()
	
	ЛК_ОбменДаннымиСервер.ВыполнитьОбмен(Истина);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПользователяНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));
	Результат = ЛК_ОбменДаннымиСервер.СоздатьПользователя(НастройкиСервиса, Токен, Объект.Пользователь, Объект.Логин, Объект.Пароль);
	
	Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
		ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
	Иначе 
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура СоздатьСотрудниковПоПользователюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Результат = ЛК_ОбменДаннымиСервер.СоздатьСотрудника(НастройкиСервиса, Токен, "", Выборка.Ссылка);
		
		Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция  СоздатьФотоНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));
			
	Результат = ЛК_ОбменДаннымиСервер.ОбновитьФотоПользователя(НастройкиСервиса, Токен, "", Объект.Пользователь);
	
	Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
		ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
	КонецЕсли;

КонецФункции

&НаСервере
Процедура СоздатьКадровуюИсториюНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));

	ЗапросКадровойИстории = Новый Запрос;
	ЗапросКадровойИстории.Текст = 	"ВЫБРАТЬ
									|	КадроваяИсторияСотрудниковИнтервальный.ДатаНачала КАК ДатаНачала,
									|	КадроваяИсторияСотрудниковИнтервальный.Должность КАК Должность,
									|	КадроваяИсторияСотрудниковИнтервальный.Подразделение КАК Подразделение,
									|	КадроваяИсторияСотрудниковИнтервальный.Сотрудник КАК Сотрудник
									|ИЗ
									|	РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
									|ГДЕ
									|	КадроваяИсторияСотрудниковИнтервальный.ФизическоеЛицо = &ФизическоеЛицо
									|ИТОГИ ПО
									|	Сотрудник";
	ЗапросКадровойИстории.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	Выборка = ЗапросКадровойИстории.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл 
		
		СтруктураРабочихМест = Новый Структура;
		МассивРабочихМест    = Новый Массив;
		
		СотрудникСсылка = Выборка.Сотрудник;
		
		ВыборкаКадровойИстории = Выборка.Выбрать();
		Пока ВыборкаКадровойИстории.Следующий() Цикл 
			
			СтруктураРабочегоМеста = Новый Структура;
			СтруктураРабочегоМеста.Вставить("position_pk",    ВыборкаКадровойИстории.Должность);
			СтруктураРабочегоМеста.Вставить("subdivision_pk", ВыборкаКадровойИстории.Подразделение);
			СтруктураРабочегоМеста.Вставить("date_from",      ВыборкаКадровойИстории.ДатаНачала);
			МассивРабочихМест.Добавить(СтруктураРабочегоМеста);  
			
		КонецЦикла;
		
		Результат = ЛК_ОбменДаннымиСервер.СоздатьОбновитьКадровойИсториюСотрудника("", НастройкиСервиса, Токен, СотрудникСсылка, МассивРабочихМест);
		
		Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли;  
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРасчетныеЛисткиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
	               |	НачисленияУдержанияПоСотрудникам.Организация КАК Организация,
	               |	НачисленияУдержанияПоСотрудникам.ПериодДействия КАК ПериодДействия
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	               |ГДЕ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = &ФизическоеЛицо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Организация,
	               |	Сотрудник,
	               |	ФизическоеЛицо,
	               |	ПериодДействия";

    Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
		
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		
		Результат = ЛК_ОбменДаннымиСервер.ДобавитьОбновитьРасчетныйЛист(НастройкиСервиса, Токен, "", Выборка.ПериодДействия, Выборка.Сотрудник, Выборка.ФизическоеЛицо); 
		
		Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли; 
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИсториюИзмененияГрафиковНаСервере()	
	
	Запрос = Новый Запрос;
	Запрос.Текст ="
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	МИНИМУМ(НАЧАЛОПЕРИОДА(ГрафикРаботыСотрудников.Период, ДЕНЬ)) КАК Период,
					|	ГрафикРаботыСотрудников.Сотрудник КАК Сотрудник
					|ИЗ
					|	РегистрСведений.ГрафикРаботыСотрудников КАК ГрафикРаботыСотрудников
					|ГДЕ
					|	ГрафикРаботыСотрудников.Сотрудник.ФизическоеЛицо = &ФизическоеЛицо
					|
					|СГРУППИРОВАТЬ ПО
					|	ГрафикРаботыСотрудников.Сотрудник
					|";
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь); 
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать(); 	
	Пока Выборка.Следующий() Цикл     
		
		Результат = ЛК_ОбменДаннымиСервер.ОбновитьДанныеОГрафикахСотрудников(НастройкиСервиса, Токен, "", Выборка.Сотрудник, Выборка.Период); 
		
		Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьВидыЗанятостиНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиПовтИсп.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциямиКлиентСервер.Результат(ЛК_ОбменДаннымиСервер.Логин(НастройкиСервиса));

	ЗапросВидыЗанятостиСотрудников = Новый Запрос;
	ЗапросВидыЗанятостиСотрудников.Текст = 	"ВЫБРАТЬ
											|	ЗапросВидыЗанятостиСотрудников.ДатаНачала КАК ДатаНачала,
											|	ЗапросВидыЗанятостиСотрудников.Сотрудник КАК Сотрудник
											|ИЗ
											|	РегистрСведений.ВидыЗанятостиСотрудниковИнтервальный КАК ЗапросВидыЗанятостиСотрудников
											|ГДЕ
											|	ЗапросВидыЗанятостиСотрудников.ФизическоеЛицо = &ФизическоеЛицо";
	ЗапросВидыЗанятостиСотрудников.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	Выборка = ЗапросВидыЗанятостиСотрудников.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Результат = ЛК_ОбменДаннымиСервер.ОбновитьВидыЗанятостиСотрудников(НастройкиСервиса, Токен, "", Выборка.Сотрудник, Выборка.ДатаНачала); 
		
		Если ЛК_РаботаСФункциямиКлиентСервер.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциямиКлиентСервер.СообщитьОбОшибках(Результат);
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти
