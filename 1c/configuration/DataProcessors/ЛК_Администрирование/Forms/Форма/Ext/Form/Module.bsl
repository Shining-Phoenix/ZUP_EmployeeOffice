#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Логин = "user@mail.ru";
	Объект.Пароль = "111111";
	                      
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмяТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПользователя(Команда)
	
	СоздатьПользователяНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСотрудниковПоПользователю(Команда)
	
	СоздатьСотрудниковПоПользователюНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФото(Команда)
	
	ОбновитьФотоНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОрганизации(Команда)
	
	СоздатьОрганизацииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДолжности(Команда)
	
	СоздатьДолжностиНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодразделения(Команда)	
	
	СоздатьПодразделенияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКадровуюИсторию(Команда)
	СоздатьКадровуюИсториюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	ВыполнитьОбменНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетныеЛистки(Команда)
	СоздатьРасчетныеЛисткиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	ЛК_ОбменДанными.ВыполнитьОбмен();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПользователяНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	Результат = ЛК_ОбменДанными.СоздатьПользователя(НастройкиСервиса, Токен, Объект.Пользователь, Объект.Логин, Объект.Пароль);
	
	Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
		ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСотрудниковПоПользователюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = ЛК_ОбменДанными.СоздатьСотрудника(НастройкиСервиса, Токен, Выборка.Ссылка);
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция  ОбновитьФотоНаСервере()
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
			
	Результат = ЛК_ОбменДанными.ОбновитьФотоПользователя(НастройкиСервиса, Токен, Объект.Пользователь);
	
	Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
		ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
	КонецЕсли;

КонецФункции

&НаСервере
Процедура СоздатьОрганизацииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Организации КАК Организации";

	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = ЛК_ОбменДанными.ДобавитьОрганизацию(НастройкиСервиса, Токен, Выборка.Ссылка);
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Выборка.Ссылка);
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СоздатьПодразделенияНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодразделенияОрганизаций.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = ЛК_ОбменДанными.ДобавитьПодразделение(НастройкиСервиса, Токен, Выборка.Ссылка);
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Выборка.Ссылка);
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СоздатьДолжностиНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Должности.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Должности КАК Должности";
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = ЛК_ОбменДанными.ДобавитьДолжность(НастройкиСервиса, Токен, Выборка.Ссылка);
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Выборка.Ссылка);
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКадровуюИсториюНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КадроваяИсторияСотрудниковИнтервальный.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	КадроваяИсторияСотрудниковИнтервальный.ДатаНачала КАК ДатаНачала,
	               |	КадроваяИсторияСотрудниковИнтервальный.Подразделение КАК Подразделение,
	               |	КадроваяИсторияСотрудниковИнтервальный.Должность КАК Должность,
	               |	КадроваяИсторияСотрудниковИнтервальный.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	РегистрСведений.КадроваяИсторияСотрудниковИнтервальный КАК КадроваяИсторияСотрудниковИнтервальный
	               |ГДЕ
	               |	КадроваяИсторияСотрудниковИнтервальный.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат = ЛК_ОбменДанными.СоздатьЗаписьКадровойИстории(НастройкиСервиса, Токен, Выборка.Сотрудник, Выборка.Подразделение, Выборка.Должность, Выборка.ДатаНачала);
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

&НаСервере
Процедура СоздатьРасчетныеЛисткиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
	               |	НачисленияУдержанияПоСотрудникам.Организация КАК Организация,
	               |	НачисленияУдержанияПоСотрудникам.ПериодДействия КАК ПериодДействия
	               |ИЗ
	               |	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	               |ГДЕ
	               |	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо = &ФизическоеЛицо
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Организация,
	               |	Сотрудник,
	               |	ФизическоеЛицо,
	               |	ПериодДействия";

    Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Пользователь);
	
		
	НастройкиСервиса = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.НастройкиСервиса());
	Токен = ЛК_РаботаСФункциями.Результат(ЛК_ОбменДанными.Логин(НастройкиСервиса));
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Результат = ЛК_ОбменДанными.ДобавитьОбновитьРасчетныйЛист(НастройкиСервиса, Токен, Выборка.ПериодДействия, Выборка.Сотрудник, Выборка.ФизическоеЛицо); 
		
		Если ЛК_РаботаСФункциями.Ошибка(Результат) Тогда
			ЛК_РаботаСФункциями.СообщитьОбОшибках(Результат);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти
